services:
  # -----------------------------------------------------------------------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - sonarr-config:/config
      - ${VIDEO_DIR}:/video
    restart: unless-stopped
  # -----------------------------------------------------------------------------------------------------
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - radarr-config:/config
      - ${VIDEO_DIR}:/video
    restart: unless-stopped
  # -----------------------------------------------------------------------------------------------------
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - prowlarr-config:/config
    restart: unless-stopped
  # -----------------------------------------------------------------------------------------------------
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - jellyfin-config:/config
      - ${VIDEO_DIR}:/video
    restart: unless-stopped
    ports:
      - ${JELLYFIN_PORT}:8096
  # -----------------------------------------------------------------------------------------------------
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - qbittorrent-config:/config
      - ${VIDEO_DIR}:/video #optional
    restart: unless-stopped
  # -----------------------------------------------------------------------------------------------------
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    volumes:
      - jellyseerr-config:/app/config
      - ${VIDEO_DIR}:/video
    restart: unless-stopped
    ports:
      - ${JELLYSEER_PORT}:5055
  # -----------------------------------------------------------------------------------------------------

  vpn:
    image: thrnz/docker-wireguard-pia
    container_name: vpn
    volumes:
      #Auth token is stored here
      - pia:/pia
      # If enabled, the forwarded port is dumped to /pia-shared/port.dat for potential use in other containers
      - pia-shared:/pia-shared
    cap_add:
      - NET_ADMIN
      # SYS_MODULE might not be needed with a 5.6+ kernel?
      #- SYS_MODULE
    # If the kernel module isn't available, mounting the tun device may be necessary for userspace implementations
    #devices:
      #- /dev/net/tun:/dev/net/tun
    environment:
      # The following env vars are required:
      - LOC=${PIA_LOCATION}
      - USER=${PIA_USER}
      - PASS=${PIA_PASS}
      #The rest are optional:
      - LOCAL_NETWORK=${LOCAL_NETWORK}
      - RECONNECT=1
      #- KEEPALIVE=25
      - VPNDNS=8.8.8.8,8.8.4.4
      - PORT_FORWARDING=1
    sysctls:
      # The wg-quick script tries to set this when setting up routing, however this requires running the container
      # with the --privileged flag set. Setting it here instead if needed means the container can be run with lower
      # privileges. This only needs setting if strict reverse path filtering (rp_filter=1) is used.
      - net.ipv4.conf.all.src_valid_mark=1
      # May as well disable ipv6. Should be blocked anyway.
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    ports:
      - ${SONARR_PORT}:8989
      - ${RADARR_PORT}:7878
      - ${PROWLARR_PORT}:9696
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
  # -----------------------------------------------------------------------------------------------------
volumes:
  sonarr-config:
  radarr-config:
  prowlarr-config:
  jellyfin-config:
  qbittorrent-config:
  jellyseerr-config:
  maintainer-data:
  pia:
  pia-shared: